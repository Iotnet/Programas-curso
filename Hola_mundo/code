#define F_CPU 8000000UL
#define BAUDRATE 9600
#define BAUD_PRESCALLER (((F_CPU / (BAUDRATE * 16UL))) - 1)

#include <avr/io.h>
#include <util/delay.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char String1[]="AT$RC\n\r";
char String2[]="AT$SF=0102030405\n\r";  //mensaje de prueba

void USART_init(void);
unsigned char USART_receive(void);
void USART_send( unsigned char data);
void USART_putstring(char* StringPtr);

int main(void)
{
	DDRC |= (1<<DDRC1); //declaracion de pin PC1 como salida para habilitar regulador de 3.3v
	USART_init();
	
	PORTC |= (1<<PORTC1); //encender regulador 3.3v
	_delay_ms(1000);
	USART_putstring(String1);  //envio de comando AT$RC
	_delay_ms(200);
	USART_putstring(String2);	//envio de trama por medio de Sigfox
	_delay_ms(4000);
	PORTC &= ~(1<<PORTC1);	//Apagar regulador 3.3v
    while (1) 
    {
    }
}

void USART_init(void){
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
}

unsigned char USART_receive(void){
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
}

void USART_send( unsigned char data){
	while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = data;
}

void USART_putstring(char* StringPtr){
	while(*StringPtr != 0x00){
		USART_send(*StringPtr);
	StringPtr++;}
}
